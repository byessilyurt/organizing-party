openapi: 3.0.3
info:
  title: OrganizingParty System API
  version: 1.0.0
  description: API documentation for OrganizingParty System
servers:
  - url: http://localhost:3000/api/v1/
paths:
  /auth/register:
    post:
      tags:
        - User Management
      summary: Registers a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's username
                password:
                  type: string
                  description: User's password
              required:
                - username
                - password
      responses:
        '200':
          description: User registration successful
        '400':
          description: Invalid request
        '409':
          description: Username already exists
  /auth/login:
    post:
      tags:
        - User Management
      summary: Logs in a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: User's username
                password:
                  type: string
                  description: User's password
              required:
                - username
                - password
      responses:
        '200':
          description: User login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: Access token for the user
        '401':
          description: Invalid credentials
  /users/{userId}:
    get:
      tags:
        - User Management
      summary: Gets user information
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        '200':
          description: User information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      tags:
        - User Management
      summary: Deletes user account
      parameters:
        - name: userId
          in: path
          required: true
          description: User ID
          schema:
            type: integer
      responses:
        '200':
          description: User account deleted successfully
        '404':
          description: User not found
  /events:
    post:
      tags:
        - Event Planning
      summary: Creates a new event
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Event title
                creationDate:
                  type: string
                  format: date-time
                  description: Event creation date and time
                eventDate:
                  type: string
                  format: date-time
                  description: Event date and time
                description:
                  type: string
                  description: Event description
                imageUrl:
                  type: string
                  format: uri
                  description: Image URL for the event
                userId:
                  type: integer
                  description: User ID of the event creator
              required:
                - title
                - creationDate
                - eventDate
                - description
                - imageUrl
                - userId
      responses:
        '201':
          description: Event created successfully
        '400':
          description: Invalid request
    get:
      tags:
        - Event Planning
      summary: Retrieves a list of events with pagination
      parameters:
      - name: page
        in: query
        required: false
        description: Page number
        schema:
          type: integer
          default: 1
      - name: limit
        in: query
        required: false
        description: Number of items per page
        schema:
          type: integer
          default: 10
      responses:
        '200':
          description: Event list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
        '404':
          description: No events found
  /events/{eventId}:
    get:
      tags:
        - Event Planning
      summary: Retrieves an event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      responses:
        '200':
          description: Event retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: Event not found
    put:
      tags:
        - Event Planning
      summary: Updates an event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          description: Event updated successfully
        '404':
          description: Event not found
    delete:
      tags:
        - Event Planning
      summary: Deletes an event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          description: Event ID
          schema:
            type: integer
      responses:
        '200':
          description: Event deleted successfully
        '404':
          description: Event not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
        username:
          type: string
          description: User's username
        password:
          type: string
          format: password
          description: User's password
        events:
          type: array
          items:
            $ref: '#/components/schemas/Event'
          description: List of events created by the user
      required:
        - id
        - username
        - password

    Event:
      type: object
      properties:
        id:
          type: integer
          description: Event ID
        title:
          type: string
          description: Event title
        creationDate:
          type: string
          format: date-time
          description: Event creation date and time
        eventDate:
          type: string
          format: date-time
          description: Event date and time
        description:
          type: string
          description: Event description
        imageUrl:
          type: string
          format: uri
          description: Image URL for the event
        userId:
          type: integer
          description: User ID of the event creator
      required:
        - id
        - title
        - creationDate
        - eventDate
        - description
        - imageUrl
        - userId
